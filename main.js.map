{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatToolbarModule,\n  MatSnackBarModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatExpansionModule,\n  MatCardModule,\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatCheckboxModule,\n  MatIconModule,\n  MatNativeDateModule,\n  MatChipsModule,\n  MatTableModule,\n  MatSortModule, \n  \n\n} from '@angular/material'\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatSortModule, \n   \n\n  ],\n  exports: [\n    MatToolbarModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatSortModule\n  ]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n    <mat-card class=\\\"mt-5 mat-elevation-z8\\\">\\n        <h3 class=\\\"text-center\\\">ADD SIGNAL</h3>\\n        <hr />\\n        <form [formGroup]=\\\"addSignalForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n          <mat-card-content>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                  <mat-label>LATITUDE COORDINATE</mat-label>\\n                  <input matInput type=\\\"text\\\" formControlName=\\\"lat\\\" />\\n                  <mat-error *ngIf=\\\"addSignalForm.controls['lat'].errors?.required && addSignalForm.controls['lat'].touched\\\">\\n                    <strong>Latitude Coordinate</strong>: is required</mat-error>\\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                  <mat-label>LONGITUDE COORDINATE</mat-label>\\n                  <input matInput type=\\\"text\\\" formControlName=\\\"lng\\\" />\\n                  <mat-error *ngIf=\\\"addSignalForm.controls['lng'].errors?.required && addSignalForm.controls['lng'].touched\\\">\\n                    <strong>Latitude Coordinate</strong>: is required</mat-error>\\n                </mat-form-field>\\n              </div>\\n            </div>\\n      \\n          </mat-card-content>\\n          \\n          <mat-card-actions>\\n            <button mat-button type=\\\"button\\\" (click)='addSignalForm.reset();' class=\\\"bg-warning text-dark\\\">\\n              <mat-icon matSuffix>cached</mat-icon>CLEAR\\n            </button>\\n            <button mat-raised-button type=\\\"submit\\\" class=\\\"bg-primary text-light\\\" [disabled]='addSignalForm.invalid'\\n              [ngClass]=\\\"{'bg-primary': !addSignalForm.invalid}\\\">\\n              <mat-icon matSuffix>done</mat-icon> ADD\\n            </button>\\n          </mat-card-actions>\\n        </form>\\n      </mat-card>\\n\\n      <mat-card class=\\\"mt-2 mat-elevation-z8\\\">\\n        <agm-map [latitude]=\\\"40.744168\\\" [longitude]=\\\"-73.930399\\\" [zoom]=\\\"11\\\" [mapTypeControl]=\\\"true\\\"\\n        [fullscreenControl]='true' [ngStyle]=\\\"{'height': '450px'}\\\" (mapClick)=\\\"mapMarker($event)\\\">\\n        \\n        <div *ngIf='markers?.length>0'>\\n            <div *ngFor='let marker of markers'>\\n                <agm-marker *ngIf = 'marker' \\n                            [latitude]=\\\"marker.lat\\\" \\n                            [longitude]=\\\"marker.lng\\\"\\n                            [iconUrl]=\\\"marker.icon\\\">\\n                  <agm-info-window [disableAutoPan]=\\\"!marker.autoPan\\\">\\n                    <div><button mat-button color=\\\"warn\\\" (click)='deleteMarker(marker)'> Delete</button>\\n                    <span *ngIf=\\\"marker.status === 'green' \\\"> \\n                      <button mat-button class=\\\"bg-danger text-light\\\" (click)='setRed(marker)'> RED </button>\\n                    </span>\\n            \\n                      <button *ngIf= \\\"marker.status == 'red' \\\"  class=\\\"bg-success text-light\\\"  mat-button (click)='setGreen(marker)'> GREEN </button>\\n                  </div> </agm-info-window>\\n                </agm-marker>\\n              </div>\\n        </div>\\n        \\n        </agm-map>\\n        </mat-card>\\n</div>\\n<router-outlet></router-outlet> \"","import { Component, OnInit } from '@angular/core';\n\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\ndeclare var firebase: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  id;\n  markers = [];\n  data = {id:'' };\n  marker ={lat:'', lng:''};\n  index;\n  addSignalForm = new FormGroup({\n    lat: new FormControl('', [Validators.required]),\n    lng: new FormControl('', [Validators.required]),\n  })\n\n  ngOnInit() {\n    this.getMarkers();\n\n  }\n\n  getMarkers() {\n    \n    firebase.database().ref('/').on('child_added', (snapshot) => {\n      this.markers.push(snapshot.val());\n      console.log('added child');\n   })\n  }\n\n  onSubmit() {\n    this.marker.lat = this.addSignalForm.value.lat;\n    this.marker.lng = this.addSignalForm.value.lng;\n    this.addMarker(this.marker);\n    this.addSignalForm.reset();\n  }\n    addMarker(marker) {\n    this.id =Math.floor((Math.random() * 1000000000) + 1);\n    this.data['lat']=marker.lat;\n    this.data['lng']=marker.lng;\n    this.data['status']='green';\n    this.data['icon']='../../../assets/green.png';\n    this.data.id =this.id;\n    firebase.database().ref('/'+ this.id ).set(this.data);\n    \n\n  }\n\n  mapMarker(event) {\n    this.addMarker(event.coords);\n  }\n\n\n  deleteMarker(marker) {\n    this.markers.splice(this.markers.indexOf(marker), 1)\n    firebase.database().ref('/' + marker.id).remove();\n  }\n\n\n  setRed(marker) {\n    this.index= this.markers.indexOf(marker);\n    this.markers[this.index].status = 'red';\n    this.markers[this.index].icon = '../../../assets/red.png';\n    this.data['id']=marker.id;\n    this.data['lat']=marker.lat;\n    this.data['lng']=marker.lng;\n    this.data['status']='red';\n    this.data['icon']='../../../assets/red.png';\n    firebase.database().ref('/'+ this.data.id ).set(this.data);\n  }\n\n\n  setGreen(marker) {\n    this.index= this.markers.indexOf(marker);\n    this.markers[this.index].status = 'green';\n    this.markers[this.index].icon = '../../../assets/green.png';\n    this.data['id']=marker.id;\n    this.data['lat']=marker.lat;\n    this.data['lng']=marker.lng;\n    this.data['status']='green';\n    this.data['icon']='../../../assets/green.png';\n    firebase.database().ref('/'+ this.data.id ).set(this.data);\n  }\n\n}\n\n\n\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { MaterialModule } from './app-material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AgmCoreModule } from '@agm/core';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule, \n    MaterialModule, \n    ReactiveFormsModule, \n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyDfXeDxr8al_lqYtIn47TdyhMaY35_29xo'\n    }),\n    HttpClientModule\n  ],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z8\\\">\\n    <div class=\\\"container\\\">\\n      <a href='/'><img src='../../../assets/dotLogo.png' height=\\\"50px\\\"></a>\\n      <h1 class=\\\"d-inline ml-2\\\"> NYC DOT ATS SERVER</h1>\\n    </div>\\n    </mat-toolbar>\\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false, \n  firebase: {\n    apiKey: \"AIzaSyDXULBt_Z5KCu48QsxxPNqP5aOpyQ_p-IU\",\n    authDomain: \"dot2-6b543.firebaseapp.com\",\n    databaseURL: \"https://dot2-6b543.firebaseio.com\",\n    projectId: \"dot2-6b543\",\n    storageBucket: \"dot2-6b543.appspot.com\",\n    messagingSenderId: \"415531796505\",\n    appId: \"1:415531796505:web:3ad269e06c5d7ba9\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}